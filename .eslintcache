[{"/Users/liqiwei/Desktop/projects/myWebPage-web/src/index.tsx":"1","/Users/liqiwei/Desktop/projects/myWebPage-web/src/serviceWorker.ts":"2","/Users/liqiwei/Desktop/projects/myWebPage-web/src/App.tsx":"3","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/states/PodcastState.tsx":"4","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/home/Homepage.tsx":"5","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/post/PostDetail.tsx":"6","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/states/PostState.tsx":"7","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/podcast/details/PodcastDetail.tsx":"8","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/podcast/PodcastList.tsx":"9","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/welcomepage/WelcomPage.jsx":"10","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/utils/utils.ts":"11","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/post/PostLayout.tsx":"12","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/home/components/HeaderBar.tsx":"13","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/home/components/Tabs.tsx":"14","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/home/components/HomePost.tsx":"15","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/podcast/details/components/LeftDetail.tsx":"16","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/podcast/details/components/RightList.tsx":"17","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/podcast/components/RightContent.tsx":"18","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/post/plugins/linkPlugins.tsx":"19","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/models/tableOfContent.tsx":"20","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/podcast/details/components/AssetContainer.tsx":"21","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/home/components/CardPanel.tsx":"22","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/post/PostTitle.tsx":"23"},{"size":453,"mtime":1588921042019,"results":"24","hashOfConfig":"25"},{"size":5201,"mtime":1569949185441,"results":"26","hashOfConfig":"25"},{"size":1793,"mtime":1594414641190,"results":"27","hashOfConfig":"25"},{"size":2357,"mtime":1594411210689,"results":"28","hashOfConfig":"25"},{"size":1654,"mtime":1594414980386,"results":"29","hashOfConfig":"25"},{"size":2390,"mtime":1609459459304,"results":"30","hashOfConfig":"25"},{"size":3985,"mtime":1594415220680,"results":"31","hashOfConfig":"25"},{"size":2992,"mtime":1594790990544,"results":"32","hashOfConfig":"25"},{"size":1329,"mtime":1594791851136,"results":"33","hashOfConfig":"25"},{"size":7099,"mtime":1609459263172,"results":"34","hashOfConfig":"25"},{"size":682,"mtime":1609458072911,"results":"35","hashOfConfig":"25"},{"size":5894,"mtime":1609459634626,"results":"36","hashOfConfig":"25"},{"size":893,"mtime":1569949185440,"results":"37","hashOfConfig":"25"},{"size":2621,"mtime":1594414618418,"results":"38","hashOfConfig":"25"},{"size":2162,"mtime":1609459317203,"results":"39","hashOfConfig":"25"},{"size":5125,"mtime":1589886892629,"results":"40","hashOfConfig":"25"},{"size":1837,"mtime":1589877991231,"results":"41","hashOfConfig":"25"},{"size":1819,"mtime":1609457821914,"results":"42","hashOfConfig":"25"},{"size":1967,"mtime":1591291329973,"results":"43","hashOfConfig":"25"},{"size":3196,"mtime":1584403324442,"results":"44","hashOfConfig":"25"},{"size":2092,"mtime":1589871046522,"results":"45","hashOfConfig":"25"},{"size":4073,"mtime":1591290152896,"results":"46","hashOfConfig":"25"},{"size":1601,"mtime":1591205518451,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"ww4np9",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"50"},"/Users/liqiwei/Desktop/projects/myWebPage-web/src/index.tsx",[],["106","107"],"/Users/liqiwei/Desktop/projects/myWebPage-web/src/serviceWorker.ts",[],"/Users/liqiwei/Desktop/projects/myWebPage-web/src/App.tsx",["108","109"],"/** @format */\n\nimport React from \"react\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport Homepage from \"./components/home/Homepage\";\nimport \"./App.css\";\nimport PostProvider from \"./components/states/PostState\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { purple, green, grey, blue } from \"@material-ui/core/colors\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport PostDetail from \"./components/post/PostDetail\";\nimport WelcomePage from \"./components/welcomepage/WelcomPage\";\nimport PodcastList from \"./components/podcast/PodcastList\";\nimport PodcastDetail from \"./components/podcast/details/PodcastDetail\";\nimport PodcastProvider from \"./components/states/PodcastState\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"light\",\n    primary: purple,\n    secondary: blue,\n  },\n});\n\nconst podcastTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: grey,\n  },\n});\n\nconst App: React.FC = () => {\n  return (\n    <div>\n      <ThemeProvider theme={theme}>\n        <PostProvider>\n          <Router>\n            <CssBaseline />\n            <Route path=\"/\" exact component={WelcomePage}></Route>\n            <Route path=\"/blog/:id?\" exact component={Homepage}></Route>\n            <Route path=\"/post/:id\" exact component={PostDetail}></Route>\n          </Router>\n        </PostProvider>\n      </ThemeProvider>\n      <ThemeProvider theme={podcastTheme}>\n        <Router>\n          <PodcastProvider>\n            <Route path=\"/playlist/\" exact component={PodcastList}></Route>\n            <Route path=\"/podcast/:id\" exact component={PodcastDetail}></Route>\n          </PodcastProvider>\n        </Router>\n      </ThemeProvider>\n    </div>\n  );\n};\n\nexport default App;\n","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/states/PodcastState.tsx",["110","111","112","113","114","115","116"],"/** @format */\n\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Post, FetchResult, Category } from \"../models/post\";\nimport { RouteComponentProps } from \"react-router\";\nimport { getURL, getPodcastURL } from \"../utils/utils\";\nimport { CategoryResult } from \"../models/category\";\nimport { Playlist, AbstractPlaylist, Video } from \"../models/podcast\";\nimport Axios from \"axios\";\n\ninterface State {\n  playlist: AbstractPlaylist[];\n  currentPlaylist?: Video;\n  nextURL?: string | null;\n  isLoading: boolean;\n  fetchPlaylist(): Promise<void>;\n  fetchNext(): void;\n  fetchPodcast(id: any): Promise<Playlist>;\n  play(podcast: Video): void;\n  clear(): void;\n}\n\ninterface Props {}\n//@ts-ignore\nconst context: State = {};\n\nexport const PodcastContext = React.createContext(context);\n\nexport default class PodcastProvider extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      playlist: [],\n      fetchNext: this.fetchNext,\n      fetchPodcast: this.fetchPodcast,\n      play: this.play,\n      clear: this.clear,\n      fetchPlaylist: this.fetchPlaylist,\n    };\n  }\n\n  clear = () => {\n    this.setState({ currentPlaylist: undefined });\n  };\n\n  play = (podcast: Video) => {\n    this.setState({ currentPlaylist: podcast });\n  };\n\n  fetchPlaylist = async () => {\n    this.setState({ isLoading: true });\n    let url = getPodcastURL(\"playlist\");\n    let result = await Axios.get(url);\n    this.setState({\n      nextURL: result.data.next,\n      playlist: result.data.results,\n      isLoading: false,\n    });\n  };\n\n  fetchPodcast = async (id: any): Promise<Playlist> => {\n    let url = getPodcastURL(`playlist/${id}/`);\n    let result = await Axios.get(url);\n    return result.data;\n  };\n\n  fetchNext = async () => {\n    if (this.state.nextURL) {\n      this.setState({ isLoading: true });\n      let result = await Axios.get(this.state.nextURL);\n      const { playlist } = this.state;\n      (result.data.results as AbstractPlaylist[]).forEach((p) => {\n        playlist.push(p);\n      });\n      this.setState({\n        nextURL: result.data.next,\n        playlist: playlist,\n        isLoading: false,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <PodcastContext.Provider value={this.state}>\n        {this.props.children}\n      </PodcastContext.Provider>\n    );\n  }\n}\n","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/home/Homepage.tsx",[],"/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/post/PostDetail.tsx",["117","118"],"/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/states/PostState.tsx",[],"/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/podcast/details/PodcastDetail.tsx",["119","120"],"/** @format */\n\nimport React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { Playlist } from \"../../models/podcast\";\nimport { PodcastContext } from \"../../states/PodcastState\";\nimport {\n  Grid,\n  CircularProgress,\n  makeStyles,\n  Theme,\n  createStyles,\n  Fade,\n  Hidden,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Drawer,\n  CssBaseline,\n} from \"@material-ui/core\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport LeftDetail from \"./components/LeftDetail\";\nimport RightList from \"./components/RightList\";\nimport { Helmet } from \"react-helmet\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\ninterface TParams {\n  id: string;\n}\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: \"#fff\",\n    },\n    drawer: {\n      width: \"500px\",\n    },\n    body: {\n      marginRight: 630,\n      [theme.breakpoints.down(\"md\")]: {\n        marginRight: 350,\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        marginRight: 0,\n      },\n    },\n  })\n);\n\nexport default function PodcastDetail({ match }: RouteComponentProps<TParams>) {\n  const classes = useStyles();\n  const [podcast, setPodcast] = React.useState<Playlist>();\n  const [showDrawer, setShowDrawer] = React.useState(false);\n  const { fetchPodcast,  } = React.useContext(PodcastContext);\n\n  React.useEffect(() => {\n    let id = match.params.id;\n    fetchPodcast(id).then((r) => {\n      setPodcast(r);\n    });\n\n  }, []);\n\n  return (\n    <div style={{ overflow: \"hidden\" }}>\n      <Helmet>\n        <link rel=\"icon\" href={podcast?.cover ?? \"\"} />\n        <title>{podcast?.title ?? \"Podcast\"}</title>\n        <meta property=\"og:title\" content={podcast?.title} />\n        <meta property=\"og:image\" content={podcast?.cover ?? \"\"} />\n      </Helmet>\n      <CssBaseline />\n      <Hidden mdUp>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton onClick={() => setShowDrawer(true)}>\n              <MenuIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n      </Hidden>\n      {podcast && (\n        <Grid container style={{ padding: 10, height: \"100%\" }} spacing={10}>\n          <Grid className={classes.body} item xs={12}>\n            <LeftDetail />\n          </Grid>\n          <Hidden smDown implementation=\"js\">\n            <Drawer\n              variant=\"permanent\"\n              className={classes.drawer}\n              anchor=\"right\"\n            >\n              <RightList podcast={podcast} />\n            </Drawer>\n          </Hidden>\n          <Hidden mdUp>\n            <Drawer\n              style={{ width: 400 }}\n              open={showDrawer}\n              onClose={() => setShowDrawer(false)}\n            >\n              <RightList podcast={podcast} />{\" \"}\n            </Drawer>\n          </Hidden>\n        </Grid>\n      )}\n      <Backdrop className={classes.backdrop} open={podcast === undefined}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n}\n","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/podcast/PodcastList.tsx",["121","122","123","124","125","126","127","128"],"/** @format */\n\nimport React from \"react\";\nimport {\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n  Hidden,\n  CssBaseline,\n  Collapse,\n  CircularProgress,\n  makeStyles,\n  Theme,\n  createStyles,\n  Backdrop,\n} from \"@material-ui/core\";\nimport LeftMenu from \"./components/LeftMenu\";\nimport RightContent from \"./components/RightContent\";\nimport { PodcastContext } from \"../states/PodcastState\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: \"#fff\",\n    },\n  })\n);\nexport default function PodcastList() {\n  const { fetchPlaylist } = React.useContext(PodcastContext);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    fetchPlaylist()\n      .then(() => setIsLoading(false))\n      .catch((err) => {\n        setIsLoading(false);\n        window.alert(\"Error: \" + err);\n      });\n  }, []);\n\n  return (\n    <Grid\n      spacing={10}\n      style={{\n        padding: 10,\n        height: \"100%\",\n        overflowX: \"hidden\",\n        width: \"100%\",\n      }}\n    >\n      <CssBaseline />\n      <Grid item xs={12}>\n        <RightContent />\n      </Grid>\n      <Backdrop open={isLoading} className={classes.backdrop}>\n        <CircularProgress />\n      </Backdrop>\n    </Grid>\n  );\n}\n","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/welcomepage/WelcomPage.jsx",["129","130","131"],"/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/utils/utils.ts",[],"/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/post/PostLayout.tsx",["132","133","134","135","136"],"/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/home/components/HeaderBar.tsx",["137","138"],"import React, { useContext } from \"react\";\nimport { Grid, Icon, Button } from \"semantic-ui-react\";\nimport { drawerWidth } from \"../../utils/utils\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { PostContext } from \"../../states/PostState\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: drawerWidth + 20\n    },\n    marginTop: 30,\n    width: \"100%\",\n    textAlign: \"left\"\n  }\n}));\n\nexport default function HeaderBar() {\n  const classes = useStyles();\n  const postContext = useContext(PostContext);\n\n  return (\n    <div className={classes.root}>\n      <Grid.Row>\n        <h1 className=\"header\">My Blog </h1>\n      </Grid.Row>\n      <Grid.Row>\n        <h2>\n          {postContext.seletedCategory && postContext.seletedCategory.category}\n        </h2>\n      </Grid.Row>\n    </div>\n  );\n}\n","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/home/components/Tabs.tsx",["139","140","141","142","143"],"/** @format */\n\nimport React, { useContext } from \"react\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { PostContext } from \"../../states/PostState\";\nimport { Menu, Segment, Sticky } from \"semantic-ui-react\";\nimport { AppBar, Tabs, Tab, Paper } from \"@material-ui/core\";\n\ninterface TabPanelProps {\n  category_id?: number;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: \"100%\",\n    // flexGrow: 1,\n    // [theme.breakpoints.up(\"sm\")]: {\n    //   marginLeft: drawerWidth + 50\n    // },\n    // marginLeft: 10,\n    // marginTop: 20,\n    // backgroundColor: theme.palette.background.paper\n  },\n}));\n\nexport default function TabsNav(props: TabPanelProps) {\n  const classes = useStyles();\n  const { category_id } = props;\n  const postContext = useContext(PostContext);\n\n  React.useEffect(() => {\n    let category = postContext.categories.find((c) => c.id === category_id);\n    if (category && postContext.seletedCategory !== category) {\n      postContext.selectCategory(category);\n    }\n  }, [category_id, postContext.categories]);\n\n  return (\n    <Sticky>\n      <Paper style={{ padding: 10 }}>\n        <Tabs\n          indicatorColor={\"secondary\"}\n          value={postContext.seletedCategory?.id ?? -1}\n          variant=\"scrollable\"\n          onChange={(e, newValue) => {\n            console.log(newValue);\n            if (newValue < 0) {\n              postContext.selectCategory(undefined);\n              window.location.href = \"#/blog/\";\n            } else {\n              window.location.href = \"#/blog/\" + newValue;\n            }\n          }}\n        >\n          <Tab label={\"All\"} value={-1} />\n          {postContext.categories.map((category, index) => (\n            <Tab\n              key={`category-${index}`}\n              label={category.category}\n              value={category.id}\n            />\n          ))}\n        </Tabs>\n      </Paper>\n    </Sticky>\n  );\n}\n\n/**\n * <Segment className={classes.root}>\n        <Menu secondary>\n          <Menu.Item\n            name=\"All\"\n            active={postContext.seletedCategory === undefined}\n            onClick={() => {\n              postContext.selectCategory(undefined);\n              window.location.href = \"#/blog\";\n            }}\n          />\n          {postContext.categories.map((category, index) => (\n            <Menu.Item\n              name={category.category}\n              active={postContext.seletedCategory === category}\n              onClick={() => {\n                window.location.href = \"#/blog/\" + category.id;\n              }}\n            />\n          ))}\n        </Menu>\n      </Segment>\n * \n */\n","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/home/components/HomePost.tsx",["144","145","146"],"/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/podcast/details/components/LeftDetail.tsx",["147","148"],"import React from \"react\";\nimport { PodcastContext } from \"../../../states/PodcastState\";\nimport {\n  Grid,\n  Typography,\n  Fade,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  IconButton,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Tabs,\n  Tab,\n  Slide,\n} from \"@material-ui/core\";\n//@ts-ignore\nimport { Player, ControlBar, ClosedCaptionButton } from \"video-react\";\nimport \"video-react/dist/video-react.css\";\nimport { VideoList } from \"../../../models/podcast\";\nimport { Divider } from \"semantic-ui-react\";\n\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport AssetContainer from \"./AssetContainer\";\n\nexport default function LeftDetail() {\n  const { currentPlaylist, clear } = React.useContext(PodcastContext);\n  const [selectedVideoList, setSelectedVideoList] = React.useState<VideoList>();\n  const [show, setShow] = React.useState(false);\n  const [currentTab, setCurrentTab] = React.useState(0);\n\n  React.useEffect(() => {\n    if (currentPlaylist !== undefined) {\n      setSelectedVideoList(currentPlaylist.video_list[0]);\n    }\n  }, [currentPlaylist]);\n\n  React.useEffect(() => {\n    return () => {\n      clear();\n    };\n  }, []);\n\n  return (\n    <div style={{ overflowY: \"scroll\", maxHeight: \"95vh\" }}>\n      <Fade in={currentPlaylist !== undefined} mountOnEnter>\n        <div>\n          {currentPlaylist && (\n            <Grid>\n              <Grid item>\n                <Player\n                  playsInline\n                  poster={currentPlaylist.cover}\n                  src={selectedVideoList?.video}\n                  crossOrigin=\"anonymous\"\n                >\n                  {currentPlaylist.subtitle && (\n                    <track\n                      srcLang=\"zh\"\n                      label=\"Chinese\"\n                      kind=\"subtitles\"\n                      src={currentPlaylist.subtitle}\n                    ></track>\n                  )}\n\n                  <ControlBar autoHide={false}>\n                    <ClosedCaptionButton order={7} />\n                  </ControlBar>\n                </Player>\n              </Grid>\n              <Grid container style={{ alignContent: \"space-between\" }}>\n                <Grid item xs={10}>\n                  <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">\n                      Resolution\n                    </InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      value={selectedVideoList?.id ?? 0}\n                      onChange={(e) => {\n                        let selectedVideo = currentPlaylist.video_list.filter(\n                          (v) => v.id === e.target.value\n                        );\n                        if (selectedVideo) {\n                          setSelectedVideoList(selectedVideo[0]);\n                        }\n                      }}\n                    >\n                      {currentPlaylist.video_list.map((v, i) => (\n                        <MenuItem key={`menu-${i}`} value={v.id}>\n                          {v.resolution}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={2}>\n                  <IconButton onClick={() => setShow(true)}>\n                    <DescriptionIcon />\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Divider />\n              <Grid item style={{ marginTop: 10 }}>\n                <Tabs\n                  value={currentTab}\n                  onChange={(e, value) => setCurrentTab(value)}\n                >\n                  <Tab label=\"Content\" value={0} />\n                  {currentPlaylist.asset_collections.length > 0 && (\n                    <Tab label=\"Assets\" value={1} />\n                  )}\n                </Tabs>\n                {/** Info tab */}\n                <Fade in={currentTab === 0} mountOnEnter unmountOnExit>\n                  <div>\n                    <Typography variant=\"h6\">\n                      {currentPlaylist?.title}\n                    </Typography>\n                    <Typography>{currentPlaylist?.description}</Typography>\n                  </div>\n                </Fade>\n                {/** Assets tab */}\n                <Fade in={currentTab === 1} mountOnEnter unmountOnExit>\n                  <AssetContainer\n                    collections={currentPlaylist.asset_collections}\n                  />\n                </Fade>\n              </Grid>\n            </Grid>\n          )}\n        </div>\n      </Fade>\n      <Fade in={currentPlaylist === undefined} unmountOnExit>\n        <Typography>No video selected</Typography>\n      </Fade>\n      <Dialog open={show} onClose={() => setShow(false)} fullWidth>\n        <DialogTitle>\n          <Typography variant=\"h6\" style={{ color: \"white\" }}>\n            Original Text\n          </Typography>\n        </DialogTitle>\n        <DialogContent>\n          <Typography>{currentPlaylist?.original_text}</Typography>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/podcast/details/components/RightList.tsx",["149","150"],"import React from \"react\";\nimport {\n  List,\n  CardMedia,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  ListItemText,\n  Divider,\n  ListItemIcon,\n  makeStyles,\n  Theme,\n  createStyles,\n} from \"@material-ui/core\";\nimport { Playlist } from \"../../../models/podcast\";\nimport { ListItem } from \"@material-ui/core\";\nimport { PodcastContext } from \"../../../states/PodcastState\";\n\ninterface Props {\n  podcast: Playlist;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    list: {\n      padding: 10,\n      width: 630,\n      [theme.breakpoints.down(\"md\")]: {\n        width: 350,\n      },\n    },\n  })\n);\n\nexport default function RightList(props: Props) {\n  const { podcast } = props;\n  const classes = useStyles();\n  const { play, currentPlaylist } = React.useContext(PodcastContext);\n  return (\n    <List className={classes.list}>\n      <Grid container spacing={3}>\n        <Grid item md={6}>\n          <CardMedia\n            image={podcast.cover}\n            style={{ height: 100, borderRadius: 10 }}\n          />\n        </Grid>\n        <Grid item md={6}>\n          <Typography variant=\"h6\">{podcast.title}</Typography>\n          <Typography noWrap>{podcast.description}</Typography>\n        </Grid>\n      </Grid>\n      <Divider style={{ width: \"100%\", marginTop: 10, marginBottom: 10 }} />\n      {podcast.videos.map((p, i) => (\n        <ListItem\n          key={`video-${i}`}\n          button\n          selected={p.id === currentPlaylist?.id}\n          onClick={() => {\n            play(p);\n          }}\n        >\n          <ListItemIcon>\n            <CardMedia\n              image={p.cover}\n              style={{ height: 80, width: 100, borderRadius: 10 }}\n            />\n          </ListItemIcon>\n          <ListItemText style={{ marginLeft: 10 }}>{p.title}</ListItemText>\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/podcast/components/RightContent.tsx",[],"/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/post/plugins/linkPlugins.tsx",["151","152"],"/** @format */\n\nimport React from \"react\";\nimport { ContentBlock } from \"draft-js\";\nimport {\n  Tooltip,\n  Typography,\n  CircularProgress,\n  withStyles,\n  Theme,\n  LinearProgress,\n  Collapse,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\n\nexport function findLinkEntities(\n  contentBlock: ContentBlock,\n  callback: any,\n  contentState: any\n) {\n  contentBlock.findEntityRanges((character: any) => {\n    const entityKey = character.getEntity();\n    return (\n      entityKey !== null &&\n      contentState.getEntity(entityKey).getType() === \"LINK\"\n    );\n  }, callback);\n}\n\nconst HtmlTooltip = withStyles((theme: Theme) => ({\n  tooltip: {\n    backgroundColor: \"#f5f5f9\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    width: 300,\n    fontSize: theme.typography.pxToRem(12),\n    border: \"1px solid #dadde9\",\n  },\n}))(Tooltip);\n\nexport const Link = (props: any) => {\n  const { url } = props.contentState.getEntity(props.entityKey).getData();\n  const [title, setTitle] = React.useState<string>();\n\n  return (\n    <HtmlTooltip\n      title={\n        <React.Fragment>\n          <Collapse in={title !== undefined} mountOnEnter unmountOnExit>\n            <Typography variant=\"h6\">{title}</Typography>\n          </Collapse>\n          <Collapse in={title === undefined} mountOnEnter unmountOnExit>\n            <LinearProgress />\n          </Collapse>\n          <span>{url}</span>\n        </React.Fragment>\n      }\n      onOpen={async () => {\n        if (!title) {\n          try {\n            let result = await axios.get(url);\n            let parser = new DOMParser();\n            let htmlDoc = parser.parseFromString(result.data, \"text/html\");\n            let title = htmlDoc.querySelector(\"title\");\n            if (title) {\n              setTitle(title.innerText);\n            }\n          } catch (err) {\n            setTitle(\"Fetch Error\");\n          }\n        }\n      }}\n    >\n      <a href={url} target=\"_blank\">\n        {props.children}\n      </a>\n    </HtmlTooltip>\n  );\n};\n","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/models/tableOfContent.tsx",[],"/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/podcast/details/components/AssetContainer.tsx",["153"],"import React from \"react\";\nimport { Collection } from \"../../../models/podcast\";\nimport path from \"path\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport {\n  Card,\n  Typography,\n  GridList,\n  GridListTile,\n  GridListTileBar,\n  Divider,\n  useMediaQuery,\n  useTheme,\n  CardMedia,\n} from \"@material-ui/core\";\nimport {\n  LazyLoadImage,\n  LazyLoadComponent,\n} from \"react-lazy-load-image-component\";\n\nexport default function AssetContainer(props: { collections: Collection[] }) {\n  const { collections } = props;\n  const theme = useTheme();\n  const mdMatches = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const smMatches = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      {collections.map((c, i) => (\n        <Card key={`collection-${i}`} style={{ padding: 20, marginBottom: 20 }}>\n          <Typography variant=\"h6\">{c.title}</Typography>\n          <Typography>{c.description}</Typography>\n          <Divider style={{ width: \"100%\", marginBottom: 10 }} />\n          <GridList\n            cellHeight={200}\n            cols={mdMatches ? (smMatches ? 2 : 4) : 6}\n            spacing={10}\n          >\n            {c.assets.map((a, i) => (\n              <GridListTile\n                key={`asset-${i}`}\n                onClick={() => {\n                  window.open(a.src);\n                }}\n                style={{ cursor: \"grab\" }}\n              >\n                {a.cover || a.type === \"image\" ? (\n                  <LazyLoadComponent>\n                    <CardMedia\n                      image={a.cover ?? a.src}\n                      style={{ height: 200, width: \"100%\" }}\n                    />\n                  </LazyLoadComponent>\n                ) : (\n                  <DescriptionIcon style={{ width: \"100%\", height: 160 }} />\n                )}\n                <GridListTileBar\n                  title={decodeURIComponent(path.basename(a.src))}\n                  subtitle={a.type}\n                />\n              </GridListTile>\n            ))}\n          </GridList>\n        </Card>\n      ))}\n    </div>\n  );\n}\n","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/home/components/CardPanel.tsx",[],"/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/post/PostTitle.tsx",["154","155","156","157","158"],"/** @format */\n\nimport React from \"react\";\nimport { Container, Button, Icon, Header, Image } from \"semantic-ui-react\";\nimport { Color, Category } from \"../models/post\";\nimport { isBrightColor } from \"../utils/utils\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core\";\nimport classes from \"*.module.css\";\nimport moment from \"moment\";\n\ninterface Props {\n  title: string;\n  author: string;\n  category: Category;\n  posted_time: string;\n  cover_color: Color[];\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    titleBright: {\n      fontWeight: \"bold\",\n      color: \"white\",\n      width: \"100%\",\n      height: \"100%\",\n    },\n\n    titleDark: {\n      fontWeight: \"bold\",\n      color: \"black\",\n      width: \"100%\",\n    },\n  })\n);\n\nexport default function PostTitle(props: Props) {\n  const isBright =\n    props.cover_color.length === 0\n      ? false\n      : isBrightColor(props.cover_color[0]);\n\n  const classes = useStyles();\n  return (\n    <Container style={{ zIndex: 10, padding: 15 }}>\n      <Header\n        as=\"div\"\n        content={\n          <div>\n            <div className={classes.titleBright} id=\"post-title\">\n              {props.title}\n            </div>\n            <p id=\"post-detail\" className={classes.titleDark}>\n              {props.author} | {props.category.category} |\n              {moment(props.posted_time).format(\"YYYY-MM-DD\")}\n            </p>\n          </div>\n        }\n        style={{\n          fontSize: \"3em\",\n          fontWeight: \"normal\",\n          marginBottom: 0,\n          marginTop: \"3em\",\n        }}\n      />\n    </Container>\n  );\n}\n",{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":4,"column":39,"nodeType":"165","messageId":"166","endLine":4,"endColumn":43},{"ruleId":"163","severity":1,"message":"167","line":9,"column":18,"nodeType":"165","messageId":"166","endLine":9,"endColumn":23},{"ruleId":"163","severity":1,"message":"168","line":4,"column":8,"nodeType":"165","messageId":"166","endLine":4,"endColumn":13},{"ruleId":"163","severity":1,"message":"169","line":5,"column":10,"nodeType":"165","messageId":"166","endLine":5,"endColumn":14},{"ruleId":"163","severity":1,"message":"170","line":5,"column":16,"nodeType":"165","messageId":"166","endLine":5,"endColumn":27},{"ruleId":"163","severity":1,"message":"171","line":5,"column":29,"nodeType":"165","messageId":"166","endLine":5,"endColumn":37},{"ruleId":"163","severity":1,"message":"172","line":6,"column":10,"nodeType":"165","messageId":"166","endLine":6,"endColumn":29},{"ruleId":"163","severity":1,"message":"173","line":7,"column":10,"nodeType":"165","messageId":"166","endLine":7,"endColumn":16},{"ruleId":"163","severity":1,"message":"174","line":8,"column":10,"nodeType":"165","messageId":"166","endLine":8,"endColumn":24},{"ruleId":"163","severity":1,"message":"175","line":10,"column":16,"nodeType":"165","messageId":"166","endLine":10,"endColumn":25},{"ruleId":"176","severity":1,"message":"177","line":69,"column":6,"nodeType":"178","endLine":69,"endColumn":8,"suggestions":"179"},{"ruleId":"163","severity":1,"message":"180","line":13,"column":3,"nodeType":"165","messageId":"166","endLine":13,"endColumn":7},{"ruleId":"176","severity":1,"message":"181","line":63,"column":6,"nodeType":"178","endLine":63,"endColumn":8,"suggestions":"182"},{"ruleId":"163","severity":1,"message":"183","line":6,"column":3,"nodeType":"165","messageId":"166","endLine":6,"endColumn":7},{"ruleId":"163","severity":1,"message":"184","line":7,"column":3,"nodeType":"165","messageId":"166","endLine":7,"endColumn":11},{"ruleId":"163","severity":1,"message":"185","line":8,"column":3,"nodeType":"165","messageId":"166","endLine":8,"endColumn":15},{"ruleId":"163","severity":1,"message":"186","line":9,"column":3,"nodeType":"165","messageId":"166","endLine":9,"endColumn":10},{"ruleId":"163","severity":1,"message":"187","line":10,"column":3,"nodeType":"165","messageId":"166","endLine":10,"endColumn":9},{"ruleId":"163","severity":1,"message":"188","line":12,"column":3,"nodeType":"165","messageId":"166","endLine":12,"endColumn":11},{"ruleId":"163","severity":1,"message":"189","line":19,"column":8,"nodeType":"165","messageId":"166","endLine":19,"endColumn":16},{"ruleId":"176","severity":1,"message":"190","line":43,"column":6,"nodeType":"178","endLine":43,"endColumn":8,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":12,"column":3,"nodeType":"165","messageId":"166","endLine":12,"endColumn":8},{"ruleId":"192","severity":1,"message":"183","line":13,"column":3,"nodeType":"165","messageId":"166","endLine":13,"endColumn":7},{"ruleId":"194","severity":1,"message":"195","line":239,"column":11,"nodeType":"196","endLine":239,"endColumn":14},{"ruleId":"163","severity":1,"message":"197","line":3,"column":17,"nodeType":"165","messageId":"166","endLine":3,"endColumn":26},{"ruleId":"163","severity":1,"message":"198","line":3,"column":38,"nodeType":"165","messageId":"166","endLine":3,"endColumn":44},{"ruleId":"163","severity":1,"message":"199","line":4,"column":44,"nodeType":"165","messageId":"166","endLine":4,"endColumn":48},{"ruleId":"163","severity":1,"message":"200","line":10,"column":31,"nodeType":"165","messageId":"166","endLine":10,"endColumn":36},{"ruleId":"163","severity":1,"message":"201","line":156,"column":10,"nodeType":"165","messageId":"166","endLine":156,"endColumn":16},{"ruleId":"163","severity":1,"message":"202","line":2,"column":16,"nodeType":"165","messageId":"166","endLine":2,"endColumn":20},{"ruleId":"163","severity":1,"message":"203","line":2,"column":22,"nodeType":"165","messageId":"166","endLine":2,"endColumn":28},{"ruleId":"163","severity":1,"message":"204","line":6,"column":10,"nodeType":"165","messageId":"166","endLine":6,"endColumn":14},{"ruleId":"163","severity":1,"message":"205","line":6,"column":16,"nodeType":"165","messageId":"166","endLine":6,"endColumn":23},{"ruleId":"163","severity":1,"message":"206","line":7,"column":10,"nodeType":"165","messageId":"166","endLine":7,"endColumn":16},{"ruleId":"163","severity":1,"message":"207","line":27,"column":9,"nodeType":"165","messageId":"166","endLine":27,"endColumn":16},{"ruleId":"176","severity":1,"message":"208","line":36,"column":6,"nodeType":"178","endLine":36,"endColumn":43,"suggestions":"209"},{"ruleId":"163","severity":1,"message":"175","line":11,"column":3,"nodeType":"165","messageId":"166","endLine":11,"endColumn":12},{"ruleId":"163","severity":1,"message":"210","line":43,"column":29,"nodeType":"165","messageId":"166","endLine":43,"endColumn":36},{"ruleId":"163","severity":1,"message":"211","line":43,"column":38,"nodeType":"165","messageId":"166","endLine":43,"endColumn":53},{"ruleId":"163","severity":1,"message":"212","line":17,"column":3,"nodeType":"165","messageId":"166","endLine":17,"endColumn":8},{"ruleId":"176","severity":1,"message":"213","line":44,"column":6,"nodeType":"178","endLine":44,"endColumn":8,"suggestions":"214"},{"ruleId":"163","severity":1,"message":"199","line":5,"column":3,"nodeType":"165","messageId":"166","endLine":5,"endColumn":7},{"ruleId":"163","severity":1,"message":"215","line":6,"column":3,"nodeType":"165","messageId":"166","endLine":6,"endColumn":14},{"ruleId":"163","severity":1,"message":"216","line":8,"column":3,"nodeType":"165","messageId":"166","endLine":8,"endColumn":19},{"ruleId":"217","severity":1,"message":"218","line":73,"column":7,"nodeType":"196","endLine":73,"endColumn":37},{"ruleId":"163","severity":1,"message":"219","line":17,"column":3,"nodeType":"165","messageId":"166","endLine":17,"endColumn":16},{"ruleId":"163","severity":1,"message":"203","line":4,"column":21,"nodeType":"165","messageId":"166","endLine":4,"endColumn":27},{"ruleId":"163","severity":1,"message":"202","line":4,"column":29,"nodeType":"165","messageId":"166","endLine":4,"endColumn":33},{"ruleId":"163","severity":1,"message":"193","line":4,"column":43,"nodeType":"165","messageId":"166","endLine":4,"endColumn":48},{"ruleId":"163","severity":1,"message":"220","line":8,"column":8,"nodeType":"165","messageId":"166","endLine":8,"endColumn":15},{"ruleId":"163","severity":1,"message":"221","line":37,"column":9,"nodeType":"165","messageId":"166","endLine":37,"endColumn":17},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'green' is defined but never used.","'axios' is defined but never used.","'Post' is defined but never used.","'FetchResult' is defined but never used.","'Category' is defined but never used.","'RouteComponentProps' is defined but never used.","'getURL' is defined but never used.","'CategoryResult' is defined but never used.","'Container' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["224"],"'Fade' is defined but never used.","React Hook React.useEffect has missing dependencies: 'fetchPodcast' and 'match.params.id'. Either include them or remove the dependency array.",["225"],"'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'Divider' is defined but never used.","'Hidden' is defined but never used.","'Collapse' is defined but never used.","'LeftMenu' is defined but never used.","React Hook React.useEffect has a missing dependency: 'fetchPlaylist'. Either include it or remove the dependency array.",["226"],"no-unused-vars","'Image' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Component' is defined but never used.","'useRef' is defined but never used.","'Card' is defined but never used.","'Paper' is defined but never used.","'height' is assigned a value but never used.","'Icon' is defined but never used.","'Button' is defined but never used.","'Menu' is defined but never used.","'Segment' is defined but never used.","'AppBar' is defined but never used.","'classes' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'postContext'. Either include it or remove the dependency array.",["227"],"'getPost' is assigned a value but never used.","'seletedCategory' is assigned a value but never used.","'Slide' is defined but never used.","React Hook React.useEffect has a missing dependency: 'clear'. Either include it or remove the dependency array.",["228"],"'CardContent' is defined but never used.","'CircularProgress' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'LazyLoadImage' is defined but never used.","'classes' is defined but never used.","'isBright' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},"Update the dependencies array to be: [match.params.id]",{"range":"239","text":"240"},"Update the dependencies array to be: [fetchPodcast, match.params.id]",{"range":"241","text":"242"},"Update the dependencies array to be: [fetchPlaylist]",{"range":"243","text":"244"},"Update the dependencies array to be: [category_id, postContext, postContext.categories]",{"range":"245","text":"246"},"Update the dependencies array to be: [clear]",{"range":"247","text":"248"},[1870,1872],"[match.params.id]",[1476,1478],"[fetchPodcast, match.params.id]",[940,942],"[fetchPlaylist]",[1037,1074],"[category_id, postContext, postContext.categories]",[1152,1154],"[clear]"]