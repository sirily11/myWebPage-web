[{"/Users/liqiwei/Desktop/projects/myWebPage-web/src/index.tsx":"1","/Users/liqiwei/Desktop/projects/myWebPage-web/src/serviceWorker.ts":"2","/Users/liqiwei/Desktop/projects/myWebPage-web/src/App.tsx":"3","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/states/PodcastState.tsx":"4","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/home/Homepage.tsx":"5","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/post/PostDetail.tsx":"6","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/states/PostState.tsx":"7","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/podcast/details/PodcastDetail.tsx":"8","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/podcast/PodcastList.tsx":"9","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/welcomepage/WelcomPage.jsx":"10","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/utils/utils.ts":"11","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/post/PostLayout.tsx":"12","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/home/components/HeaderBar.tsx":"13","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/home/components/Tabs.tsx":"14","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/home/components/HomePost.tsx":"15","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/podcast/details/components/LeftDetail.tsx":"16","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/podcast/details/components/RightList.tsx":"17","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/podcast/components/RightContent.tsx":"18","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/post/plugins/linkPlugins.tsx":"19","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/models/tableOfContent.tsx":"20","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/podcast/details/components/AssetContainer.tsx":"21","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/home/components/CardPanel.tsx":"22","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/post/PostTitle.tsx":"23","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/post/plugins/stylemap.ts":"24","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/post/plugins/imagePlugins.tsx":"25","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/post/plugins/audioPlugins.tsx":"26","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/post/plugins/postSettingsPlugins.tsx":"27"},{"size":453,"mtime":1588921042019,"results":"28","hashOfConfig":"29"},{"size":5201,"mtime":1569949185441,"results":"30","hashOfConfig":"29"},{"size":1881,"mtime":1609459736761,"results":"31","hashOfConfig":"29"},{"size":2357,"mtime":1594411210689,"results":"32","hashOfConfig":"29"},{"size":1654,"mtime":1594414980386,"results":"33","hashOfConfig":"29"},{"size":2523,"mtime":1609459736800,"results":"34","hashOfConfig":"29"},{"size":4021,"mtime":1609459736762,"results":"35","hashOfConfig":"29"},{"size":2992,"mtime":1594790990544,"results":"36","hashOfConfig":"29"},{"size":1329,"mtime":1594791851136,"results":"37","hashOfConfig":"29"},{"size":7099,"mtime":1609459263172,"results":"38","hashOfConfig":"29"},{"size":683,"mtime":1609461011862,"results":"39","hashOfConfig":"29"},{"size":6465,"mtime":1609460448936,"results":"40","hashOfConfig":"29"},{"size":893,"mtime":1569949185440,"results":"41","hashOfConfig":"29"},{"size":2621,"mtime":1594414618418,"results":"42","hashOfConfig":"29"},{"size":2162,"mtime":1609459317203,"results":"43","hashOfConfig":"29"},{"size":5125,"mtime":1589886892629,"results":"44","hashOfConfig":"29"},{"size":1837,"mtime":1589877991231,"results":"45","hashOfConfig":"29"},{"size":1819,"mtime":1609457821914,"results":"46","hashOfConfig":"29"},{"size":1694,"mtime":1609459736761,"results":"47","hashOfConfig":"29"},{"size":3196,"mtime":1584403324442,"results":"48","hashOfConfig":"29"},{"size":2092,"mtime":1589871046522,"results":"49","hashOfConfig":"29"},{"size":4073,"mtime":1591290152896,"results":"50","hashOfConfig":"29"},{"size":1601,"mtime":1591205518451,"results":"51","hashOfConfig":"29"},{"size":1015,"mtime":1609459736761,"results":"52","hashOfConfig":"29"},{"size":2338,"mtime":1609459736761,"results":"53","hashOfConfig":"29"},{"size":1002,"mtime":1609459736761,"results":"54","hashOfConfig":"29"},{"size":1758,"mtime":1609460870440,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"ww4np9",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"58"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"58"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"58"},"/Users/liqiwei/Desktop/projects/myWebPage-web/src/index.tsx",[],["131","132"],"/Users/liqiwei/Desktop/projects/myWebPage-web/src/serviceWorker.ts",[],"/Users/liqiwei/Desktop/projects/myWebPage-web/src/App.tsx",["133","134"],"/** @format */\n\nimport React from \"react\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport Homepage from \"./components/home/Homepage\";\nimport \"./App.css\";\nimport PostProvider from \"./components/states/PostState\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { purple, green, grey, blue } from \"@material-ui/core/colors\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport PostDetail from \"./components/post/PostDetail\";\nimport WelcomePage from \"./components/welcomepage/WelcomPage\";\nimport PodcastList from \"./components/podcast/PodcastList\";\nimport PodcastDetail from \"./components/podcast/details/PodcastDetail\";\nimport PodcastProvider from \"./components/states/PodcastState\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport 'react-image-lightbox/style.css';\nimport 'react-h5-audio-player/lib/styles.css';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"light\",\n    primary: purple,\n    secondary: blue,\n  },\n});\n\nconst podcastTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: grey,\n  },\n});\n\nconst App: React.FC = () => {\n  return (\n    <div>\n      <ThemeProvider theme={theme}>\n        <PostProvider>\n          <Router>\n            <CssBaseline />\n            <Route path=\"/\" exact component={WelcomePage}></Route>\n            <Route path=\"/blog/:id?\" exact component={Homepage}></Route>\n            <Route path=\"/post/:id\" exact component={PostDetail}></Route>\n          </Router>\n        </PostProvider>\n      </ThemeProvider>\n      <ThemeProvider theme={podcastTheme}>\n        <Router>\n          <PodcastProvider>\n            <Route path=\"/playlist/\" exact component={PodcastList}></Route>\n            <Route path=\"/podcast/:id\" exact component={PodcastDetail}></Route>\n          </PodcastProvider>\n        </Router>\n      </ThemeProvider>\n    </div>\n  );\n};\n\nexport default App;\n","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/states/PodcastState.tsx",["135","136","137","138","139","140","141"],"/** @format */\n\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Post, FetchResult, Category } from \"../models/post\";\nimport { RouteComponentProps } from \"react-router\";\nimport { getURL, getPodcastURL } from \"../utils/utils\";\nimport { CategoryResult } from \"../models/category\";\nimport { Playlist, AbstractPlaylist, Video } from \"../models/podcast\";\nimport Axios from \"axios\";\n\ninterface State {\n  playlist: AbstractPlaylist[];\n  currentPlaylist?: Video;\n  nextURL?: string | null;\n  isLoading: boolean;\n  fetchPlaylist(): Promise<void>;\n  fetchNext(): void;\n  fetchPodcast(id: any): Promise<Playlist>;\n  play(podcast: Video): void;\n  clear(): void;\n}\n\ninterface Props {}\n//@ts-ignore\nconst context: State = {};\n\nexport const PodcastContext = React.createContext(context);\n\nexport default class PodcastProvider extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      playlist: [],\n      fetchNext: this.fetchNext,\n      fetchPodcast: this.fetchPodcast,\n      play: this.play,\n      clear: this.clear,\n      fetchPlaylist: this.fetchPlaylist,\n    };\n  }\n\n  clear = () => {\n    this.setState({ currentPlaylist: undefined });\n  };\n\n  play = (podcast: Video) => {\n    this.setState({ currentPlaylist: podcast });\n  };\n\n  fetchPlaylist = async () => {\n    this.setState({ isLoading: true });\n    let url = getPodcastURL(\"playlist\");\n    let result = await Axios.get(url);\n    this.setState({\n      nextURL: result.data.next,\n      playlist: result.data.results,\n      isLoading: false,\n    });\n  };\n\n  fetchPodcast = async (id: any): Promise<Playlist> => {\n    let url = getPodcastURL(`playlist/${id}/`);\n    let result = await Axios.get(url);\n    return result.data;\n  };\n\n  fetchNext = async () => {\n    if (this.state.nextURL) {\n      this.setState({ isLoading: true });\n      let result = await Axios.get(this.state.nextURL);\n      const { playlist } = this.state;\n      (result.data.results as AbstractPlaylist[]).forEach((p) => {\n        playlist.push(p);\n      });\n      this.setState({\n        nextURL: result.data.next,\n        playlist: playlist,\n        isLoading: false,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <PodcastContext.Provider value={this.state}>\n        {this.props.children}\n      </PodcastContext.Provider>\n    );\n  }\n}\n","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/home/Homepage.tsx",[],"/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/post/PostDetail.tsx",["142","143"],"/** @format */\n\nimport React, { useState } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { getURL } from \"../utils/utils\";\nimport { Post } from \"../models/post\";\nimport { Helmet } from \"react-helmet\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport axios from \"axios\";\nimport { Grid, Container } from \"semantic-ui-react\";\nimport PostLayout from \"./PostLayout\";\nimport { Fade } from \"@material-ui/core\";\nimport \"./post.css\";\nimport \"draft-js/dist/Draft.css\";\n\ntype TParams = { id?: string };\n\nfunction LoadingCard() {\n  return (\n    <Grid style={{ marginTop: 20, width: \"100%\" }}>\n      <Grid.Row>\n        <Grid.Column width={6}>\n          {Array.from({ length: 5 }, (v, k) => k + 1).map((i) => (\n            <Skeleton\n              variant=\"rect\"\n              height={10}\n              width={\"100%\"}\n              style={{ margin: 10 }}\n            ></Skeleton>\n          ))}\n        </Grid.Column>\n        <Grid.Column width={10}>\n          <Skeleton\n            variant=\"rect\"\n            height={\"80%\"}\n            style={{ margin: 10 }}\n          ></Skeleton>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        {Array.from({ length: 20 }, (v, k) => k + 1).map((i) => (\n          <Skeleton\n            variant=\"rect\"\n            height={10}\n            width={\"100%\"}\n            style={{ margin: 10 }}\n          ></Skeleton>\n        ))}\n      </Grid.Row>\n    </Grid>\n  );\n}\n\nexport default function PostDetail({ match }: RouteComponentProps<TParams>) {\n  const [post, setPost] = useState<Post>();\n\n  React.useEffect(() => {\n    const url = getURL(`post/${match.params.id}/`);\n    axios\n      .get(url)\n      .then((res) => {\n        let post: Post = res.data;\n        post.settings = JSON.parse(post.settings as string);\n\n        setPost(post);\n        document.title = res.data.title;\n      })\n      .catch((err) => alert(`Error: ${err}`));\n  }, []);\n\n  return (\n    <div style={{ height: \"100%\" }} id=\"container\">\n      <Helmet>\n        <link property=\"apple-touch-icon\" href={post?.image_url} />\n        <meta property=\"og:title\" content={post?.title} />\n        <meta property=\"og:image\" content={post?.image_url} />\n      </Helmet>\n      <Fade in={post !== undefined} mountOnEnter>\n        <div style={{ width: \"100%\", height: \"100%\" }}>\n          {post && <PostLayout post={post}></PostLayout>}\n        </div>\n      </Fade>\n      <Fade in={post === undefined} unmountOnExit mountOnEnter>\n        <LoadingCard></LoadingCard>\n      </Fade>\n    </div>\n  );\n}\n","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/states/PostState.tsx",[],"/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/podcast/details/PodcastDetail.tsx",["144","145"],"/** @format */\n\nimport React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { Playlist } from \"../../models/podcast\";\nimport { PodcastContext } from \"../../states/PodcastState\";\nimport {\n  Grid,\n  CircularProgress,\n  makeStyles,\n  Theme,\n  createStyles,\n  Fade,\n  Hidden,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Drawer,\n  CssBaseline,\n} from \"@material-ui/core\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport LeftDetail from \"./components/LeftDetail\";\nimport RightList from \"./components/RightList\";\nimport { Helmet } from \"react-helmet\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\ninterface TParams {\n  id: string;\n}\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: \"#fff\",\n    },\n    drawer: {\n      width: \"500px\",\n    },\n    body: {\n      marginRight: 630,\n      [theme.breakpoints.down(\"md\")]: {\n        marginRight: 350,\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        marginRight: 0,\n      },\n    },\n  })\n);\n\nexport default function PodcastDetail({ match }: RouteComponentProps<TParams>) {\n  const classes = useStyles();\n  const [podcast, setPodcast] = React.useState<Playlist>();\n  const [showDrawer, setShowDrawer] = React.useState(false);\n  const { fetchPodcast,  } = React.useContext(PodcastContext);\n\n  React.useEffect(() => {\n    let id = match.params.id;\n    fetchPodcast(id).then((r) => {\n      setPodcast(r);\n    });\n\n  }, []);\n\n  return (\n    <div style={{ overflow: \"hidden\" }}>\n      <Helmet>\n        <link rel=\"icon\" href={podcast?.cover ?? \"\"} />\n        <title>{podcast?.title ?? \"Podcast\"}</title>\n        <meta property=\"og:title\" content={podcast?.title} />\n        <meta property=\"og:image\" content={podcast?.cover ?? \"\"} />\n      </Helmet>\n      <CssBaseline />\n      <Hidden mdUp>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton onClick={() => setShowDrawer(true)}>\n              <MenuIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n      </Hidden>\n      {podcast && (\n        <Grid container style={{ padding: 10, height: \"100%\" }} spacing={10}>\n          <Grid className={classes.body} item xs={12}>\n            <LeftDetail />\n          </Grid>\n          <Hidden smDown implementation=\"js\">\n            <Drawer\n              variant=\"permanent\"\n              className={classes.drawer}\n              anchor=\"right\"\n            >\n              <RightList podcast={podcast} />\n            </Drawer>\n          </Hidden>\n          <Hidden mdUp>\n            <Drawer\n              style={{ width: 400 }}\n              open={showDrawer}\n              onClose={() => setShowDrawer(false)}\n            >\n              <RightList podcast={podcast} />{\" \"}\n            </Drawer>\n          </Hidden>\n        </Grid>\n      )}\n      <Backdrop className={classes.backdrop} open={podcast === undefined}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n}\n","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/podcast/PodcastList.tsx",["146","147","148","149","150","151","152","153"],"/** @format */\n\nimport React from \"react\";\nimport {\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n  Hidden,\n  CssBaseline,\n  Collapse,\n  CircularProgress,\n  makeStyles,\n  Theme,\n  createStyles,\n  Backdrop,\n} from \"@material-ui/core\";\nimport LeftMenu from \"./components/LeftMenu\";\nimport RightContent from \"./components/RightContent\";\nimport { PodcastContext } from \"../states/PodcastState\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: \"#fff\",\n    },\n  })\n);\nexport default function PodcastList() {\n  const { fetchPlaylist } = React.useContext(PodcastContext);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    fetchPlaylist()\n      .then(() => setIsLoading(false))\n      .catch((err) => {\n        setIsLoading(false);\n        window.alert(\"Error: \" + err);\n      });\n  }, []);\n\n  return (\n    <Grid\n      spacing={10}\n      style={{\n        padding: 10,\n        height: \"100%\",\n        overflowX: \"hidden\",\n        width: \"100%\",\n      }}\n    >\n      <CssBaseline />\n      <Grid item xs={12}>\n        <RightContent />\n      </Grid>\n      <Backdrop open={isLoading} className={classes.backdrop}>\n        <CircularProgress />\n      </Backdrop>\n    </Grid>\n  );\n}\n","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/welcomepage/WelcomPage.jsx",["154","155","156"],"/** @format */\n\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport {\n  Button,\n  Container,\n  Divider,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  List,\n  Menu,\n  Responsive,\n  Segment,\n  Sidebar,\n  Visibility,\n  Card,\n} from \"semantic-ui-react\";\nimport { NavLink } from \"react-router-dom\";\n\n// Heads up!\n// We using React Static to prerender our docs with server side rendering, this is a quite simple solution.\n// For more advanced usage please check Responsive docs under the \"Usage\" section.\nconst getWidth = () => {\n  const isSSR = typeof window === \"undefined\";\n\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth;\n};\n\n/* eslint-disable react/no-multi-comp */\n/* Heads up! HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled components for\n * such things.\n */\nconst HomepageHeading = ({ mobile }) => (\n  <Container text>\n    <Header\n      as=\"h1\"\n      content=\"A wonderful personal website\"\n      inverted\n      style={{\n        fontSize: mobile ? \"2em\" : \"4em\",\n        fontWeight: \"normal\",\n        marginBottom: 0,\n        marginTop: mobile ? \"1.5em\" : \"3em\",\n      }}\n    />\n    <Header\n      as=\"h2\"\n      content=\"Look for blogs?\"\n      inverted\n      style={{\n        fontSize: mobile ? \"1.5em\" : \"1.7em\",\n        fontWeight: \"normal\",\n        marginTop: mobile ? \"0.5em\" : \"1.5em\",\n      }}\n    />\n    <NavLink to=\"/blog\">\n      <Button primary size=\"huge\">\n        Read more\n        <Icon name=\"right arrow\" />\n      </Button>\n    </NavLink>\n  </Container>\n);\n\nHomepageHeading.propTypes = {\n  mobile: PropTypes.bool,\n};\n\n/* Heads up!\n * Neither Semantic UI nor Semantic UI React offer a responsive navbar, however, it can be implemented easily.\n * It can be more complicated, but you can create really flexible markup.\n */\nclass DesktopContainer extends Component {\n  state = {};\n\n  hideFixedMenu = () => this.setState({ fixed: false });\n  showFixedMenu = () => this.setState({ fixed: true });\n\n  render() {\n    const { children } = this.props;\n    const { fixed } = this.state;\n\n    return (\n      <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n        <Visibility\n          once={false}\n          onBottomPassed={this.showFixedMenu}\n          onBottomPassedReverse={this.hideFixedMenu}\n        >\n          <Segment\n            inverted\n            textAlign=\"center\"\n            style={{ minHeight: 700, padding: \"1em 0em\" }}\n            vertical\n          >\n            <Menu\n              fixed={fixed ? \"top\" : null}\n              inverted={!fixed}\n              pointing={!fixed}\n              secondary={!fixed}\n              size=\"large\"\n            >\n              <Container>\n                <Menu.Item as=\"a\" active>\n                  Home\n                </Menu.Item>\n                <NavLink to=\"/blog\">\n                  <Menu.Item as=\"a\">Blog</Menu.Item>\n                </NavLink>\n                <NavLink to=\"/playlist\">\n                  <Menu.Item as=\"a\">Podcast</Menu.Item>\n                </NavLink>\n              </Container>\n            </Menu>\n            <HomepageHeading />\n          </Segment>\n        </Visibility>\n\n        {children}\n      </Responsive>\n    );\n  }\n}\n\nDesktopContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nclass MobileContainer extends Component {\n  state = {};\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false });\n\n  handleToggle = () => this.setState({ sidebarOpened: true });\n\n  render() {\n    const { children } = this.props;\n    const { sidebarOpened } = this.state;\n\n    return (\n      <Responsive\n        as={Sidebar.Pushable}\n        getWidth={getWidth}\n        maxWidth={Responsive.onlyMobile.maxWidth}\n      >\n        <Sidebar\n          as={Menu}\n          animation=\"push\"\n          inverted\n          onHide={this.handleSidebarHide}\n          vertical\n          visible={sidebarOpened}\n        >\n          <Menu.Item as=\"a\" active>\n            Home\n          </Menu.Item>\n\n          <NavLink to=\"/blog\">\n            <Menu.Item as=\"a\">Blog</Menu.Item>\n          </NavLink>\n\n          <NavLink to=\"/playlist\">\n            <Menu.Item as=\"a\">Podcast</Menu.Item>\n          </NavLink>\n        </Sidebar>\n\n        <Sidebar.Pusher dimmed={sidebarOpened}>\n          <Segment\n            inverted\n            textAlign=\"center\"\n            style={{ minHeight: 350, padding: \"1em 0em\" }}\n            vertical\n          >\n            <Container>\n              <Menu inverted pointing secondary size=\"large\">\n                <Menu.Item onClick={this.handleToggle}>\n                  <Icon name=\"sidebar\" />\n                </Menu.Item>\n              </Menu>\n            </Container>\n            <HomepageHeading mobile />\n          </Segment>\n\n          {children}\n        </Sidebar.Pusher>\n      </Responsive>\n    );\n  }\n}\n\nMobileContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nconst ResponsiveContainer = ({ children }) => (\n  <div>\n    <DesktopContainer>{children}</DesktopContainer>\n    <MobileContainer>{children}</MobileContainer>\n  </div>\n);\n\nResponsiveContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nconst WelcomePage = () => (\n  <ResponsiveContainer>\n    <Segment style={{ padding: \"0em\" }} vertical>\n      <Grid celled=\"internally\" columns=\"equal\" stackable>\n        <Grid.Row textAlign=\"center\">\n          <Grid.Column style={{ paddingBottom: \"5em\", paddingTop: \"5em\" }}>\n            <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\n              \"Multiple Open sources projects\"\n            </Header>\n            <p style={{ fontSize: \"1.33em\" }}>@github/sirily11</p>\n          </Grid.Column>\n          <Grid.Column style={{ paddingBottom: \"5em\", paddingTop: \"5em\" }}>\n            <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\n              \"Multiple skills\"\n            </Header>\n            <p style={{ fontSize: \"1.33em\" }}>\n              Video Editing, Coding, and more!\n            </p>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment>\n    <Segment style={{ padding: \"1em 0em\" }} vertical>\n      <Container text>\n        <Divider\n          as=\"h4\"\n          className=\"header\"\n          horizontal\n          style={{ margin: \"3em 0em\", textTransform: \"uppercase\" }}\n        >\n          <a>Projects</a>\n        </Divider>\n        <Card.Group\n          centered\n          items={[\n            { header: \"Game Maker\", description: \"A Game Making Web app\" },\n            {\n              header: \"Storage Management System desktop\",\n              description: \"A desktop version of storage management system\",\n            },\n            {\n              header: \"Storage Management System mobile\",\n              description:\n                \"A Storage management system for both iOS and Android\",\n            },\n            { header: \"Smart Bike\", description: \"A Smart Bike Mobile app\" },\n            {\n              header: \"Post Editor\",\n              description: \"A post editor tool for my personal website\",\n            },\n          ]}\n        ></Card.Group>\n      </Container>\n    </Segment>\n  </ResponsiveContainer>\n);\nexport default WelcomePage;\n",["157","158"],"/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/utils/utils.ts",[],"/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/post/PostLayout.tsx",["159","160","161","162","163","164"],"/** @format */\n\nimport React, { Component, useState, useRef } from \"react\";\nimport { Container, Menu, Segment, Button, Card } from \"semantic-ui-react\";\nimport PostTitle from \"./PostTitle\";\nimport { NavLink } from \"react-router-dom\";\nimport { Post, Color, Category } from \"../models/post\";\n\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Theme, createStyles, Paper, Grid } from \"@material-ui/core\";\nimport { convertFromRaw, EditorState, CompositeDecorator } from \"draft-js\";\nimport Editor, { composeDecorators } from \"draft-js-plugins-editor\";\n/// plugins\nimport createInlineToolbarPlugin from \"draft-js-inline-toolbar-plugin\";\n//@ts-ignore\nimport createSideToolbarPlugin from \"draft-js-side-toolbar-plugin\";\nimport createImagePlugin from \"draft-js-image-plugin\";\nimport createBlockDndPlugin from \"draft-js-drag-n-drop-plugin\";\nimport createFocusPlugin from \"draft-js-focus-plugin\";\n//@ts-ignore\nimport createAlignmentPlugin from \"draft-js-alignment-plugin\";\nimport createResizeablePlugin from \"draft-js-resizeable-plugin\";\n\n//@ts-ignore\nimport \"draft-js/dist/Draft.css\";\nimport \"draft-js-inline-toolbar-plugin/lib/plugin.css\";\nimport \"draft-js-side-toolbar-plugin/lib/plugin.css\";\nimport \"draft-js-alignment-plugin/lib/plugin.css\";\nimport \"draft-js-linkify-plugin/lib/plugin.css\";\n\nimport { ContentElement } from \"../models/tableOfContent\";\nimport { findLinkEntities, Link } from \"./plugins/linkPlugins\";\nimport { findImageEntities, ImageComponent } from \"./plugins/imagePlugins\";\nimport { findAudioEntities, AudioComponent } from \"./plugins/audioPlugins\";\nimport {\n  findPostSettingsEntities,\n  PostSettingsComponent,\n} from \"./plugins/postSettingsPlugins\";\nimport { styleMap } from \"./plugins/stylemap\";\n// endplugins\n\nconst resizeablePlugin = createResizeablePlugin();\nconst inlineToolbarPlugin = createInlineToolbarPlugin();\nconst alignmentPlugin = createAlignmentPlugin();\nconst sideToolbarPlugin = createSideToolbarPlugin({\n  position: \"right\",\n});\nconst focusPlugin = createFocusPlugin();\nconst blockDndPlugin = createBlockDndPlugin();\nconst decorator = composeDecorators(\n  focusPlugin.decorator,\n  blockDndPlugin.decorator,\n  alignmentPlugin.decorator,\n  resizeablePlugin.decorator\n);\nconst imagePlugin = createImagePlugin({ decorator });\n\nconst { AlignmentTool } = alignmentPlugin;\n\ninterface ContainerProps {\n  title: string;\n  author: string;\n  imageSrc?: string;\n  cover_color: Color[];\n  tocElement: ContentElement;\n  posted_time: string;\n  category: Category;\n}\n\ninterface LayoutProps {\n  post: Post;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    body: {\n      backgroundRepeat: \"no-repeat\",\n      backgroundSize: \"cover\",\n      margin: 10,\n      [theme.breakpoints.up(\"sm\")]: {\n        padding: \"0px\",\n      },\n      height: 200,\n      padding: 0,\n      backgroundColor: \"pink\",\n    },\n    container: {\n      overflow: \"hidden\",\n      overflowX: \"hidden\",\n      height: \"100%\",\n      [theme.breakpoints.down(\"sm\")]: {\n        overflow: \"scroll\",\n      },\n    },\n    content: {\n      overflowX: \"hidden\",\n      [theme.breakpoints.down(\"sm\")]: {\n        overflow: \"hidden\",\n        maxHeight: \"100%\",\n        padding: \"5px\",\n      },\n      overflowY: \"scroll\",\n      maxHeight: \"100vh\",\n      padding: \"5px\",\n    },\n    cover: {\n      height: \"100vh\",\n      width: \"100%\",\n    },\n  })\n);\n\n\n\nfunction TitleWithCover(props: ContainerProps) {\n  return (\n    <Segment\n      inverted\n      textAlign=\"left\"\n      style={{\n        height: \"100%\",\n        backgroundImage: `url(${props.imageSrc})`,\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        display: \"block\",\n      }}\n      vertical\n    >\n      <Menu\n        inverted={false}\n        secondary={true}\n        size=\"large\"\n        style={{ margin: 10 }}\n      >\n        <Container>\n          <NavLink to={`/blog/${props.category.id}`}>\n            <Button icon=\"arrow left\"></Button>\n          </NavLink>\n        </Container>\n      </Menu>\n      <PostTitle\n        title={props.title}\n        author={props.author}\n        cover_color={props.cover_color}\n        posted_time={props.posted_time}\n        category={props.category}\n      />\n      <div style={{ marginLeft: 40 }} id=\"toc\">\n        {props.tocElement.render(props.cover_color)}\n      </div>\n    </Segment>\n  );\n}\n\nfunction PostLayout(props: LayoutProps) {\n  const linkDecorator = new CompositeDecorator([\n    {\n      strategy: findLinkEntities,\n      component: Link,\n    },\n    {\n      strategy: findImageEntities,\n      component: ImageComponent,\n    },\n    {\n      strategy: findAudioEntities,\n      component: AudioComponent,\n    },\n    {\n      strategy: findPostSettingsEntities,\n      component: PostSettingsComponent,\n      props: props.post.settings\n    },\n  ]);\n  const classes = useStyles();\n  const [height, setHeight] = useState(window.innerHeight);\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", (ev) => {\n      setHeight(window.innerHeight);\n    });\n  }, []);\n\n  return (\n    <Grid container className={classes.container}>\n      <Grid item md={6} className={classes.cover}>\n        <TitleWithCover\n          category={props.post.post_category}\n          tocElement={ContentElement.constructElementTree(\n            JSON.parse(props.post.content)\n          )}\n          title={props.post.title}\n          author={props.post.author.username}\n          imageSrc={props.post.image_url}\n          cover_color={props.post.cover_color}\n          posted_time={props.post.posted_time}\n        />\n      </Grid>\n      <Grid item md={6} className={classes.content}>\n        <div style={{ zIndex: 10 }}>\n          <Editor\n            blockStyleFn={(block) => {\n              let type = block.getType();\n              if (type === \"unstyled\") {\n                return \"text\";\n              }\n              return \"\";\n            }}\n            customStyleMap={styleMap}\n            onChange={(e) => {}}\n            readOnly\n            editorState={EditorState.createWithContent(\n              convertFromRaw(JSON.parse(props.post.content)),\n              linkDecorator\n            )}\n            plugins={[\n              inlineToolbarPlugin,\n              sideToolbarPlugin,\n              blockDndPlugin,\n              focusPlugin,\n              resizeablePlugin,\n            ]}\n          >\n            <AlignmentTool />\n          </Editor>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\nexport default PostLayout;\n","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/home/components/HeaderBar.tsx",["165","166"],"import React, { useContext } from \"react\";\nimport { Grid, Icon, Button } from \"semantic-ui-react\";\nimport { drawerWidth } from \"../../utils/utils\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { PostContext } from \"../../states/PostState\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: drawerWidth + 20\n    },\n    marginTop: 30,\n    width: \"100%\",\n    textAlign: \"left\"\n  }\n}));\n\nexport default function HeaderBar() {\n  const classes = useStyles();\n  const postContext = useContext(PostContext);\n\n  return (\n    <div className={classes.root}>\n      <Grid.Row>\n        <h1 className=\"header\">My Blog </h1>\n      </Grid.Row>\n      <Grid.Row>\n        <h2>\n          {postContext.seletedCategory && postContext.seletedCategory.category}\n        </h2>\n      </Grid.Row>\n    </div>\n  );\n}\n","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/home/components/Tabs.tsx",["167","168","169","170","171"],"/** @format */\n\nimport React, { useContext } from \"react\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { PostContext } from \"../../states/PostState\";\nimport { Menu, Segment, Sticky } from \"semantic-ui-react\";\nimport { AppBar, Tabs, Tab, Paper } from \"@material-ui/core\";\n\ninterface TabPanelProps {\n  category_id?: number;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: \"100%\",\n    // flexGrow: 1,\n    // [theme.breakpoints.up(\"sm\")]: {\n    //   marginLeft: drawerWidth + 50\n    // },\n    // marginLeft: 10,\n    // marginTop: 20,\n    // backgroundColor: theme.palette.background.paper\n  },\n}));\n\nexport default function TabsNav(props: TabPanelProps) {\n  const classes = useStyles();\n  const { category_id } = props;\n  const postContext = useContext(PostContext);\n\n  React.useEffect(() => {\n    let category = postContext.categories.find((c) => c.id === category_id);\n    if (category && postContext.seletedCategory !== category) {\n      postContext.selectCategory(category);\n    }\n  }, [category_id, postContext.categories]);\n\n  return (\n    <Sticky>\n      <Paper style={{ padding: 10 }}>\n        <Tabs\n          indicatorColor={\"secondary\"}\n          value={postContext.seletedCategory?.id ?? -1}\n          variant=\"scrollable\"\n          onChange={(e, newValue) => {\n            console.log(newValue);\n            if (newValue < 0) {\n              postContext.selectCategory(undefined);\n              window.location.href = \"#/blog/\";\n            } else {\n              window.location.href = \"#/blog/\" + newValue;\n            }\n          }}\n        >\n          <Tab label={\"All\"} value={-1} />\n          {postContext.categories.map((category, index) => (\n            <Tab\n              key={`category-${index}`}\n              label={category.category}\n              value={category.id}\n            />\n          ))}\n        </Tabs>\n      </Paper>\n    </Sticky>\n  );\n}\n\n/**\n * <Segment className={classes.root}>\n        <Menu secondary>\n          <Menu.Item\n            name=\"All\"\n            active={postContext.seletedCategory === undefined}\n            onClick={() => {\n              postContext.selectCategory(undefined);\n              window.location.href = \"#/blog\";\n            }}\n          />\n          {postContext.categories.map((category, index) => (\n            <Menu.Item\n              name={category.category}\n              active={postContext.seletedCategory === category}\n              onClick={() => {\n                window.location.href = \"#/blog/\" + category.id;\n              }}\n            />\n          ))}\n        </Menu>\n      </Segment>\n * \n */\n","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/home/components/HomePost.tsx",["172","173","174"],"/** @format */\n\nimport React, { useContext, useState } from \"react\";\nimport { Grid, Button } from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Post } from \"../../models/post\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  Container,\n  Fade,\n} from \"@material-ui/core\";\nimport { PostContext } from \"../../states/PostState\";\nimport { drawerWidth } from \"../../utils/utils\";\nimport CardPanel from \"./CardPanel\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    content: {\n      [theme.breakpoints.up(\"sm\")]: {\n        marginLeft: drawerWidth + 30,\n      },\n      margin: 40,\n    },\n    divider: {\n      [theme.breakpoints.down(\"sm\")]: {\n        display: \"none\",\n      },\n    },\n    hrDivider: {\n      backgroundImage:\n        \"linear-gradient(to right, #333 10%, rgba(255, 255, 255, 0) 0%)\",\n      backgroundPosition: \"top\",\n      backgroundSize: \"10px 1px\",\n      backgroundRepeat: \"repeat-x\",\n    },\n  })\n);\n\nexport default function HomePost() {\n  const classes = useStyles();\n  const { posts, fetchNext, getPost, seletedCategory, nextURL } = useContext(\n    PostContext\n  );\n  const [isLoading, setIsLoading] = useState(false);\n\n  function split(posts: Post[]): Post[][] {\n    const itemPerList = 3;\n    let list: Post[][] = [];\n    let i = 0;\n    while (i < posts.length) {\n      list.push(posts.slice(i, i + itemPerList));\n      i += itemPerList;\n    }\n    return list;\n  }\n  return (\n    <Grid>\n      <Grid.Row className={classes.content}>\n        {split(posts).map((pl, index) => {\n          if (pl.length === 0) {\n            return <div></div>;\n          }\n          return <CardPanel posts={pl} reverse={index % 2 !== 0}></CardPanel>;\n        })}\n      </Grid.Row>\n      <Fade in={nextURL !== undefined} mountOnEnter unmountOnExit timeout={100}>\n        <Grid.Row centered>\n          <Button\n            loading={isLoading}\n            primary\n            onClick={async () => {\n              setIsLoading(true);\n              await fetchNext();\n              setIsLoading(false);\n            }}\n          >\n            Load more\n          </Button>\n        </Grid.Row>\n      </Fade>\n    </Grid>\n  );\n}\n","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/podcast/details/components/LeftDetail.tsx",["175","176"],"import React from \"react\";\nimport { PodcastContext } from \"../../../states/PodcastState\";\nimport {\n  Grid,\n  Typography,\n  Fade,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  IconButton,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Tabs,\n  Tab,\n  Slide,\n} from \"@material-ui/core\";\n//@ts-ignore\nimport { Player, ControlBar, ClosedCaptionButton } from \"video-react\";\nimport \"video-react/dist/video-react.css\";\nimport { VideoList } from \"../../../models/podcast\";\nimport { Divider } from \"semantic-ui-react\";\n\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport AssetContainer from \"./AssetContainer\";\n\nexport default function LeftDetail() {\n  const { currentPlaylist, clear } = React.useContext(PodcastContext);\n  const [selectedVideoList, setSelectedVideoList] = React.useState<VideoList>();\n  const [show, setShow] = React.useState(false);\n  const [currentTab, setCurrentTab] = React.useState(0);\n\n  React.useEffect(() => {\n    if (currentPlaylist !== undefined) {\n      setSelectedVideoList(currentPlaylist.video_list[0]);\n    }\n  }, [currentPlaylist]);\n\n  React.useEffect(() => {\n    return () => {\n      clear();\n    };\n  }, []);\n\n  return (\n    <div style={{ overflowY: \"scroll\", maxHeight: \"95vh\" }}>\n      <Fade in={currentPlaylist !== undefined} mountOnEnter>\n        <div>\n          {currentPlaylist && (\n            <Grid>\n              <Grid item>\n                <Player\n                  playsInline\n                  poster={currentPlaylist.cover}\n                  src={selectedVideoList?.video}\n                  crossOrigin=\"anonymous\"\n                >\n                  {currentPlaylist.subtitle && (\n                    <track\n                      srcLang=\"zh\"\n                      label=\"Chinese\"\n                      kind=\"subtitles\"\n                      src={currentPlaylist.subtitle}\n                    ></track>\n                  )}\n\n                  <ControlBar autoHide={false}>\n                    <ClosedCaptionButton order={7} />\n                  </ControlBar>\n                </Player>\n              </Grid>\n              <Grid container style={{ alignContent: \"space-between\" }}>\n                <Grid item xs={10}>\n                  <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">\n                      Resolution\n                    </InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      value={selectedVideoList?.id ?? 0}\n                      onChange={(e) => {\n                        let selectedVideo = currentPlaylist.video_list.filter(\n                          (v) => v.id === e.target.value\n                        );\n                        if (selectedVideo) {\n                          setSelectedVideoList(selectedVideo[0]);\n                        }\n                      }}\n                    >\n                      {currentPlaylist.video_list.map((v, i) => (\n                        <MenuItem key={`menu-${i}`} value={v.id}>\n                          {v.resolution}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={2}>\n                  <IconButton onClick={() => setShow(true)}>\n                    <DescriptionIcon />\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Divider />\n              <Grid item style={{ marginTop: 10 }}>\n                <Tabs\n                  value={currentTab}\n                  onChange={(e, value) => setCurrentTab(value)}\n                >\n                  <Tab label=\"Content\" value={0} />\n                  {currentPlaylist.asset_collections.length > 0 && (\n                    <Tab label=\"Assets\" value={1} />\n                  )}\n                </Tabs>\n                {/** Info tab */}\n                <Fade in={currentTab === 0} mountOnEnter unmountOnExit>\n                  <div>\n                    <Typography variant=\"h6\">\n                      {currentPlaylist?.title}\n                    </Typography>\n                    <Typography>{currentPlaylist?.description}</Typography>\n                  </div>\n                </Fade>\n                {/** Assets tab */}\n                <Fade in={currentTab === 1} mountOnEnter unmountOnExit>\n                  <AssetContainer\n                    collections={currentPlaylist.asset_collections}\n                  />\n                </Fade>\n              </Grid>\n            </Grid>\n          )}\n        </div>\n      </Fade>\n      <Fade in={currentPlaylist === undefined} unmountOnExit>\n        <Typography>No video selected</Typography>\n      </Fade>\n      <Dialog open={show} onClose={() => setShow(false)} fullWidth>\n        <DialogTitle>\n          <Typography variant=\"h6\" style={{ color: \"white\" }}>\n            Original Text\n          </Typography>\n        </DialogTitle>\n        <DialogContent>\n          <Typography>{currentPlaylist?.original_text}</Typography>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/podcast/details/components/RightList.tsx",["177","178"],"import React from \"react\";\nimport {\n  List,\n  CardMedia,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  ListItemText,\n  Divider,\n  ListItemIcon,\n  makeStyles,\n  Theme,\n  createStyles,\n} from \"@material-ui/core\";\nimport { Playlist } from \"../../../models/podcast\";\nimport { ListItem } from \"@material-ui/core\";\nimport { PodcastContext } from \"../../../states/PodcastState\";\n\ninterface Props {\n  podcast: Playlist;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    list: {\n      padding: 10,\n      width: 630,\n      [theme.breakpoints.down(\"md\")]: {\n        width: 350,\n      },\n    },\n  })\n);\n\nexport default function RightList(props: Props) {\n  const { podcast } = props;\n  const classes = useStyles();\n  const { play, currentPlaylist } = React.useContext(PodcastContext);\n  return (\n    <List className={classes.list}>\n      <Grid container spacing={3}>\n        <Grid item md={6}>\n          <CardMedia\n            image={podcast.cover}\n            style={{ height: 100, borderRadius: 10 }}\n          />\n        </Grid>\n        <Grid item md={6}>\n          <Typography variant=\"h6\">{podcast.title}</Typography>\n          <Typography noWrap>{podcast.description}</Typography>\n        </Grid>\n      </Grid>\n      <Divider style={{ width: \"100%\", marginTop: 10, marginBottom: 10 }} />\n      {podcast.videos.map((p, i) => (\n        <ListItem\n          key={`video-${i}`}\n          button\n          selected={p.id === currentPlaylist?.id}\n          onClick={() => {\n            play(p);\n          }}\n        >\n          <ListItemIcon>\n            <CardMedia\n              image={p.cover}\n              style={{ height: 80, width: 100, borderRadius: 10 }}\n            />\n          </ListItemIcon>\n          <ListItemText style={{ marginLeft: 10 }}>{p.title}</ListItemText>\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/podcast/components/RightContent.tsx",[],"/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/post/plugins/linkPlugins.tsx",["179","180","181","182","183"],"/** @format */\n\nimport React from \"react\";\nimport { ContentBlock } from \"draft-js\";\nimport {\n  Tooltip,\n  Typography,\n  CircularProgress,\n  withStyles,\n  Theme,\n  LinearProgress,\n  Collapse,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\n\ninterface LinkProps {\n  title: string;\n  image?: string;\n  summary?: string;\n  link: string;\n}\n\nexport function findLinkEntities(\n  contentBlock: ContentBlock,\n  callback: any,\n  contentState: any\n) {\n  contentBlock.findEntityRanges((character: any) => {\n    const entityKey = character.getEntity();\n    return (\n      entityKey !== null &&\n      contentState.getEntity(entityKey).getType() === \"LINK\"\n    );\n  }, callback);\n}\n\nconst HtmlTooltip = withStyles((theme: Theme) => ({\n  tooltip: {\n    backgroundColor: \"#f5f5f9\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    width: 300,\n    fontSize: theme.typography.pxToRem(12),\n    border: \"1px solid #dadde9\",\n  },\n}))(Tooltip);\n\nexport const Link = (props: any) => {\n  const entityData: LinkProps = props.contentState\n    .getEntity(props.entityKey)\n    .getData().url;\n  console.log(entityData);\n\n  return (\n    <HtmlTooltip\n      title={\n        <React.Fragment>\n          <Typography variant=\"h6\">{entityData?.title ?? \"No data\"}</Typography>\n          {entityData?.image && (\n            <img\n              src={entityData?.image}\n              alt={\"\"}\n              height={200}\n              crossOrigin={\"anonymous\"}\n            />\n          )}\n          <Typography>{entityData?.summary}</Typography>\n          <span>{entityData?.link}</span>\n        </React.Fragment>\n      }\n    >\n      <a href={entityData.link} target=\"_blank\">\n        {props.children}\n      </a>\n    </HtmlTooltip>\n  );\n};\n","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/models/tableOfContent.tsx",[],"/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/podcast/details/components/AssetContainer.tsx",["184"],"import React from \"react\";\nimport { Collection } from \"../../../models/podcast\";\nimport path from \"path\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport {\n  Card,\n  Typography,\n  GridList,\n  GridListTile,\n  GridListTileBar,\n  Divider,\n  useMediaQuery,\n  useTheme,\n  CardMedia,\n} from \"@material-ui/core\";\nimport {\n  LazyLoadImage,\n  LazyLoadComponent,\n} from \"react-lazy-load-image-component\";\n\nexport default function AssetContainer(props: { collections: Collection[] }) {\n  const { collections } = props;\n  const theme = useTheme();\n  const mdMatches = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const smMatches = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      {collections.map((c, i) => (\n        <Card key={`collection-${i}`} style={{ padding: 20, marginBottom: 20 }}>\n          <Typography variant=\"h6\">{c.title}</Typography>\n          <Typography>{c.description}</Typography>\n          <Divider style={{ width: \"100%\", marginBottom: 10 }} />\n          <GridList\n            cellHeight={200}\n            cols={mdMatches ? (smMatches ? 2 : 4) : 6}\n            spacing={10}\n          >\n            {c.assets.map((a, i) => (\n              <GridListTile\n                key={`asset-${i}`}\n                onClick={() => {\n                  window.open(a.src);\n                }}\n                style={{ cursor: \"grab\" }}\n              >\n                {a.cover || a.type === \"image\" ? (\n                  <LazyLoadComponent>\n                    <CardMedia\n                      image={a.cover ?? a.src}\n                      style={{ height: 200, width: \"100%\" }}\n                    />\n                  </LazyLoadComponent>\n                ) : (\n                  <DescriptionIcon style={{ width: \"100%\", height: 160 }} />\n                )}\n                <GridListTileBar\n                  title={decodeURIComponent(path.basename(a.src))}\n                  subtitle={a.type}\n                />\n              </GridListTile>\n            ))}\n          </GridList>\n        </Card>\n      ))}\n    </div>\n  );\n}\n","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/home/components/CardPanel.tsx",[],"/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/post/PostTitle.tsx",["185","186","187","188","189"],"/** @format */\n\nimport React from \"react\";\nimport { Container, Button, Icon, Header, Image } from \"semantic-ui-react\";\nimport { Color, Category } from \"../models/post\";\nimport { isBrightColor } from \"../utils/utils\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core\";\nimport classes from \"*.module.css\";\nimport moment from \"moment\";\n\ninterface Props {\n  title: string;\n  author: string;\n  category: Category;\n  posted_time: string;\n  cover_color: Color[];\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    titleBright: {\n      fontWeight: \"bold\",\n      color: \"white\",\n      width: \"100%\",\n      height: \"100%\",\n    },\n\n    titleDark: {\n      fontWeight: \"bold\",\n      color: \"black\",\n      width: \"100%\",\n    },\n  })\n);\n\nexport default function PostTitle(props: Props) {\n  const isBright =\n    props.cover_color.length === 0\n      ? false\n      : isBrightColor(props.cover_color[0]);\n\n  const classes = useStyles();\n  return (\n    <Container style={{ zIndex: 10, padding: 15 }}>\n      <Header\n        as=\"div\"\n        content={\n          <div>\n            <div className={classes.titleBright} id=\"post-title\">\n              {props.title}\n            </div>\n            <p id=\"post-detail\" className={classes.titleDark}>\n              {props.author} | {props.category.category} |\n              {moment(props.posted_time).format(\"YYYY-MM-DD\")}\n            </p>\n          </div>\n        }\n        style={{\n          fontSize: \"3em\",\n          fontWeight: \"normal\",\n          marginBottom: 0,\n          marginTop: \"3em\",\n        }}\n      />\n    </Container>\n  );\n}\n",["190","191"],"/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/post/plugins/stylemap.ts",[],"/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/post/plugins/imagePlugins.tsx",["192"],"/** @format */\n\nimport React from \"react\";\nimport { ContentBlock } from \"draft-js\";\nimport Lightbox from \"react-image-lightbox\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { Fade, CircularProgress } from \"@material-ui/core\";\n\nexport function findImageEntities(\n  contentBlock: ContentBlock,\n  callback: any,\n  contentState: any\n) {\n  contentBlock.findEntityRanges((character: any) => {\n    const entityKey = character.getEntity();\n    return (\n      entityKey !== null &&\n      contentState.getEntity(entityKey).getType() === \"image\"\n    );\n  }, callback);\n}\n\nexport const ImageComponent = (props: any) => {\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\n  const [show, setShow] = React.useState(false);\n  const [isLoading, setLoading] = React.useState(true);\n  const { alignment, width, src } = props.contentState\n    .getEntity(props.entityKey)\n    .getData();\n\n  let style: React.CSSProperties = {\n    cursor: \"grab\",\n  };\n\n  if (matches) {\n    style = {\n      ...style,\n      maxWidth: `${width}%`,\n    };\n  } else {\n    style = { ...style, width: \"100%\" };\n  }\n\n  if (alignment === \"left\") {\n    style = { ...style, float: \"left\" };\n  } else if (alignment === \"right\") {\n    style = { ...style, float: \"right\" };\n  } else if (alignment === \"center\") {\n    style = {\n      ...style,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      display: \"block\",\n    };\n  }\n\n  if (isLoading) {\n    style = {\n      ...style,\n      display: \"hidden\",\n    };\n  }\n\n  return (\n    <React.Fragment>\n      <Fade in={isLoading}>\n        <div\n          style={{\n            display: \"flex\",\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            marginRight: \"-50%\",\n            transform: \"translate(-50%, -50%)\",\n          }}\n        >\n          <CircularProgress />\n        </div>\n      </Fade>\n      <img\n        src={src}\n        style={style}\n        onClick={() => setShow(true)}\n        onError={() => setLoading(false)}\n        onLoad={() => {\n          setLoading(false);\n        }}\n      />\n      {show && (\n        <Lightbox\n          mainSrc={src}\n          onCloseRequest={() => {\n            setShow(false);\n          }}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/post/plugins/audioPlugins.tsx",["193","194"],"/** @format */\n\nimport React from \"react\";\nimport { ContentBlock } from \"draft-js\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport function findAudioEntities(\n  contentBlock: ContentBlock,\n  callback: any,\n  contentState: any\n) {\n  contentBlock.findEntityRanges((character: any) => {\n    const entityKey = character.getEntity();\n    return (\n      entityKey !== null &&\n      contentState.getEntity(entityKey).getType() === \"audio\"\n    );\n  }, callback);\n}\n\nexport const AudioComponent = (props: any) => {\n  const { src } = props.contentState.getEntity(props.entityKey).getData();\n\n  return (\n    <React.Fragment>\n      <AudioPlayer src={src} />\n      <Typography>\n        <b>Audio Src:</b> <Link>{decodeURIComponent(src)}</Link>\n      </Typography>\n    </React.Fragment>\n  );\n};\n","/Users/liqiwei/Desktop/projects/myWebPage-web/src/components/post/plugins/postSettingsPlugins.tsx",["195","196","197","198","199"],"/** @format */\n\nimport React from \"react\";\nimport { ContentBlock } from \"draft-js\";\nimport {\n  Tooltip,\n  Typography,\n  CircularProgress,\n  withStyles,\n  Theme,\n  LinearProgress,\n  Collapse,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { DetailSettings } from \"../../models/post\";\n\nexport function findPostSettingsEntities(\n  contentBlock: ContentBlock,\n  callback: any,\n  contentState: any\n) {\n  contentBlock.findEntityRanges((character: any) => {\n    const entityKey = character.getEntity();\n    return (\n      entityKey !== null &&\n      contentState.getEntity(entityKey).getType() === \"POST-SETTINGS\"\n    );\n  }, callback);\n}\n\nconst HtmlTooltip = withStyles((theme: Theme) => ({\n  tooltip: {\n    backgroundColor: \"#f5f5f9\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    width: 300,\n    fontSize: theme.typography.pxToRem(12),\n    border: \"1px solid #dadde9\",\n  },\n}))(Tooltip);\n\nexport const PostSettingsComponent = (props: any) => {\n  const entity = props.contentState.getEntity(props.entityKey);\n  const { settings } = props;\n  const [detail, setDetail] = React.useState<DetailSettings>();\n  const entityData: DetailSettings | undefined = entity\n    ? entity.get(\"data\")\n    : undefined;\n\n  React.useEffect(() => {\n    if (settings) {\n      for (let s of settings) {\n        for (let d of s.detailSettings) {\n          if (d.id === entityData?.id) {\n            setDetail(d);\n          }\n        }\n      }\n    }\n  }, [settings]);\n  return (\n    <HtmlTooltip\n      title={\n        <div>\n          <Typography variant=\"h6\">{detail?.name}</Typography>\n          <Typography>{detail?.description}</Typography>\n        </div>\n      }\n    >\n      <span style={{ cursor: \"pointer\", color: \"blue\" }}>{props.children}</span>\n    </HtmlTooltip>\n  );\n};\n",{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"205","line":4,"column":39,"nodeType":"206","messageId":"207","endLine":4,"endColumn":43},{"ruleId":"204","severity":1,"message":"208","line":9,"column":18,"nodeType":"206","messageId":"207","endLine":9,"endColumn":23},{"ruleId":"204","severity":1,"message":"209","line":4,"column":8,"nodeType":"206","messageId":"207","endLine":4,"endColumn":13},{"ruleId":"204","severity":1,"message":"210","line":5,"column":10,"nodeType":"206","messageId":"207","endLine":5,"endColumn":14},{"ruleId":"204","severity":1,"message":"211","line":5,"column":16,"nodeType":"206","messageId":"207","endLine":5,"endColumn":27},{"ruleId":"204","severity":1,"message":"212","line":5,"column":29,"nodeType":"206","messageId":"207","endLine":5,"endColumn":37},{"ruleId":"204","severity":1,"message":"213","line":6,"column":10,"nodeType":"206","messageId":"207","endLine":6,"endColumn":29},{"ruleId":"204","severity":1,"message":"214","line":7,"column":10,"nodeType":"206","messageId":"207","endLine":7,"endColumn":16},{"ruleId":"204","severity":1,"message":"215","line":8,"column":10,"nodeType":"206","messageId":"207","endLine":8,"endColumn":24},{"ruleId":"204","severity":1,"message":"216","line":10,"column":16,"nodeType":"206","messageId":"207","endLine":10,"endColumn":25},{"ruleId":"217","severity":1,"message":"218","line":69,"column":6,"nodeType":"219","endLine":69,"endColumn":8,"suggestions":"220"},{"ruleId":"204","severity":1,"message":"221","line":13,"column":3,"nodeType":"206","messageId":"207","endLine":13,"endColumn":7},{"ruleId":"217","severity":1,"message":"222","line":63,"column":6,"nodeType":"219","endLine":63,"endColumn":8,"suggestions":"223"},{"ruleId":"204","severity":1,"message":"224","line":6,"column":3,"nodeType":"206","messageId":"207","endLine":6,"endColumn":7},{"ruleId":"204","severity":1,"message":"225","line":7,"column":3,"nodeType":"206","messageId":"207","endLine":7,"endColumn":11},{"ruleId":"204","severity":1,"message":"226","line":8,"column":3,"nodeType":"206","messageId":"207","endLine":8,"endColumn":15},{"ruleId":"204","severity":1,"message":"227","line":9,"column":3,"nodeType":"206","messageId":"207","endLine":9,"endColumn":10},{"ruleId":"204","severity":1,"message":"228","line":10,"column":3,"nodeType":"206","messageId":"207","endLine":10,"endColumn":9},{"ruleId":"204","severity":1,"message":"229","line":12,"column":3,"nodeType":"206","messageId":"207","endLine":12,"endColumn":11},{"ruleId":"204","severity":1,"message":"230","line":19,"column":8,"nodeType":"206","messageId":"207","endLine":19,"endColumn":16},{"ruleId":"217","severity":1,"message":"231","line":43,"column":6,"nodeType":"219","endLine":43,"endColumn":8,"suggestions":"232"},{"ruleId":"233","severity":1,"message":"234","line":12,"column":3,"nodeType":"206","messageId":"207","endLine":12,"endColumn":8},{"ruleId":"233","severity":1,"message":"224","line":13,"column":3,"nodeType":"206","messageId":"207","endLine":13,"endColumn":7},{"ruleId":"235","severity":1,"message":"236","line":239,"column":11,"nodeType":"237","endLine":239,"endColumn":14},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"238","line":3,"column":17,"nodeType":"206","messageId":"207","endLine":3,"endColumn":26},{"ruleId":"204","severity":1,"message":"239","line":3,"column":38,"nodeType":"206","messageId":"207","endLine":3,"endColumn":44},{"ruleId":"204","severity":1,"message":"240","line":4,"column":44,"nodeType":"206","messageId":"207","endLine":4,"endColumn":48},{"ruleId":"204","severity":1,"message":"241","line":10,"column":31,"nodeType":"206","messageId":"207","endLine":10,"endColumn":36},{"ruleId":"204","severity":1,"message":"242","line":56,"column":7,"nodeType":"206","messageId":"207","endLine":56,"endColumn":18},{"ruleId":"204","severity":1,"message":"243","line":177,"column":10,"nodeType":"206","messageId":"207","endLine":177,"endColumn":16},{"ruleId":"204","severity":1,"message":"244","line":2,"column":16,"nodeType":"206","messageId":"207","endLine":2,"endColumn":20},{"ruleId":"204","severity":1,"message":"245","line":2,"column":22,"nodeType":"206","messageId":"207","endLine":2,"endColumn":28},{"ruleId":"204","severity":1,"message":"246","line":6,"column":10,"nodeType":"206","messageId":"207","endLine":6,"endColumn":14},{"ruleId":"204","severity":1,"message":"247","line":6,"column":16,"nodeType":"206","messageId":"207","endLine":6,"endColumn":23},{"ruleId":"204","severity":1,"message":"248","line":7,"column":10,"nodeType":"206","messageId":"207","endLine":7,"endColumn":16},{"ruleId":"204","severity":1,"message":"249","line":27,"column":9,"nodeType":"206","messageId":"207","endLine":27,"endColumn":16},{"ruleId":"217","severity":1,"message":"250","line":36,"column":6,"nodeType":"219","endLine":36,"endColumn":43,"suggestions":"251"},{"ruleId":"204","severity":1,"message":"216","line":11,"column":3,"nodeType":"206","messageId":"207","endLine":11,"endColumn":12},{"ruleId":"204","severity":1,"message":"252","line":43,"column":29,"nodeType":"206","messageId":"207","endLine":43,"endColumn":36},{"ruleId":"204","severity":1,"message":"253","line":43,"column":38,"nodeType":"206","messageId":"207","endLine":43,"endColumn":53},{"ruleId":"204","severity":1,"message":"254","line":17,"column":3,"nodeType":"206","messageId":"207","endLine":17,"endColumn":8},{"ruleId":"217","severity":1,"message":"255","line":44,"column":6,"nodeType":"219","endLine":44,"endColumn":8,"suggestions":"256"},{"ruleId":"204","severity":1,"message":"240","line":5,"column":3,"nodeType":"206","messageId":"207","endLine":5,"endColumn":7},{"ruleId":"204","severity":1,"message":"257","line":6,"column":3,"nodeType":"206","messageId":"207","endLine":6,"endColumn":14},{"ruleId":"204","severity":1,"message":"258","line":8,"column":3,"nodeType":"206","messageId":"207","endLine":8,"endColumn":19},{"ruleId":"204","severity":1,"message":"259","line":11,"column":3,"nodeType":"206","messageId":"207","endLine":11,"endColumn":17},{"ruleId":"204","severity":1,"message":"229","line":12,"column":3,"nodeType":"206","messageId":"207","endLine":12,"endColumn":11},{"ruleId":"204","severity":1,"message":"209","line":14,"column":8,"nodeType":"206","messageId":"207","endLine":14,"endColumn":13},{"ruleId":"260","severity":1,"message":"261","line":71,"column":7,"nodeType":"237","endLine":71,"endColumn":49},{"ruleId":"204","severity":1,"message":"262","line":17,"column":3,"nodeType":"206","messageId":"207","endLine":17,"endColumn":16},{"ruleId":"204","severity":1,"message":"245","line":4,"column":21,"nodeType":"206","messageId":"207","endLine":4,"endColumn":27},{"ruleId":"204","severity":1,"message":"244","line":4,"column":29,"nodeType":"206","messageId":"207","endLine":4,"endColumn":33},{"ruleId":"204","severity":1,"message":"234","line":4,"column":43,"nodeType":"206","messageId":"207","endLine":4,"endColumn":48},{"ruleId":"204","severity":1,"message":"263","line":8,"column":8,"nodeType":"206","messageId":"207","endLine":8,"endColumn":15},{"ruleId":"204","severity":1,"message":"264","line":37,"column":9,"nodeType":"206","messageId":"207","endLine":37,"endColumn":17},{"ruleId":"200","replacedBy":"265"},{"ruleId":"202","replacedBy":"266"},{"ruleId":"267","severity":1,"message":"268","line":82,"column":7,"nodeType":"237","endLine":90,"endColumn":9},{"ruleId":"204","severity":1,"message":"269","line":6,"column":10,"nodeType":"206","messageId":"207","endLine":6,"endColumn":18},{"ruleId":"204","severity":1,"message":"270","line":7,"column":8,"nodeType":"206","messageId":"207","endLine":7,"endColumn":21},{"ruleId":"204","severity":1,"message":"258","line":8,"column":3,"nodeType":"206","messageId":"207","endLine":8,"endColumn":19},{"ruleId":"204","severity":1,"message":"259","line":11,"column":3,"nodeType":"206","messageId":"207","endLine":11,"endColumn":17},{"ruleId":"204","severity":1,"message":"229","line":12,"column":3,"nodeType":"206","messageId":"207","endLine":12,"endColumn":11},{"ruleId":"204","severity":1,"message":"209","line":14,"column":8,"nodeType":"206","messageId":"207","endLine":14,"endColumn":13},{"ruleId":"217","severity":1,"message":"271","line":59,"column":6,"nodeType":"219","endLine":59,"endColumn":16,"suggestions":"272"},"no-native-reassign",["273"],"no-negated-in-lhs",["274"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'green' is defined but never used.","'axios' is defined but never used.","'Post' is defined but never used.","'FetchResult' is defined but never used.","'Category' is defined but never used.","'RouteComponentProps' is defined but never used.","'getURL' is defined but never used.","'CategoryResult' is defined but never used.","'Container' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["275"],"'Fade' is defined but never used.","React Hook React.useEffect has missing dependencies: 'fetchPodcast' and 'match.params.id'. Either include them or remove the dependency array.",["276"],"'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'Divider' is defined but never used.","'Hidden' is defined but never used.","'Collapse' is defined but never used.","'LeftMenu' is defined but never used.","React Hook React.useEffect has a missing dependency: 'fetchPlaylist'. Either include it or remove the dependency array.",["277"],"no-unused-vars","'Image' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Component' is defined but never used.","'useRef' is defined but never used.","'Card' is defined but never used.","'Paper' is defined but never used.","'imagePlugin' is assigned a value but never used.","'height' is assigned a value but never used.","'Icon' is defined but never used.","'Button' is defined but never used.","'Menu' is defined but never used.","'Segment' is defined but never used.","'AppBar' is defined but never used.","'classes' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'postContext'. Either include it or remove the dependency array.",["278"],"'getPost' is assigned a value but never used.","'seletedCategory' is assigned a value but never used.","'Slide' is defined but never used.","React Hook React.useEffect has a missing dependency: 'clear'. Either include it or remove the dependency array.",["279"],"'CardContent' is defined but never used.","'CircularProgress' is defined but never used.","'LinearProgress' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'LazyLoadImage' is defined but never used.","'classes' is defined but never used.","'isBright' is assigned a value but never used.",["273"],["274"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useTheme' is defined but never used.","'useMediaQuery' is defined but never used.","React Hook React.useEffect has a missing dependency: 'entityData?.id'. Either include it or remove the dependency array.",["280"],"no-global-assign","no-unsafe-negation",{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},"Update the dependencies array to be: [match.params.id]",{"range":"293","text":"294"},"Update the dependencies array to be: [fetchPodcast, match.params.id]",{"range":"295","text":"296"},"Update the dependencies array to be: [fetchPlaylist]",{"range":"297","text":"298"},"Update the dependencies array to be: [category_id, postContext, postContext.categories]",{"range":"299","text":"300"},"Update the dependencies array to be: [clear]",{"range":"301","text":"302"},"Update the dependencies array to be: [entityData?.id, settings]",{"range":"303","text":"304"},[1908,1910],"[match.params.id]",[1476,1478],"[fetchPodcast, match.params.id]",[940,942],"[fetchPlaylist]",[1037,1074],"[category_id, postContext, postContext.categories]",[1152,1154],"[clear]",[1432,1442],"[entityData?.id, settings]"]